// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  belongsToId String
  belongsTo   User     @relation(fields: [belongsToId], references: [id])
  description String
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  updates     Update[]
  @@unique([id, belongsToId])
}

enum UPDATE_STATUS {
  PENDING
  IN_PROGRESS
  DONE
}

model Update {
  id String @id @default(uuid())

  title     String
  body      String
  status    UPDATE_STATUS @default(PENDING)
  version   String?
  asset     String?
  createdAt DateTime      @default(now())
  updatedAt DateTime     @updatedAt

  productId   String
  product     Product       @relation(fields: [productId], references: [id])
  updatePoints UpdatePoint[]
}

model UpdatePoint {
  id          String @id @default(uuid())
  name        String @db.VarChar(255)
  description String

  updateId String
  update   Update @relation(fields: [updateId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
